//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CakePromotion.CakePromoServiceWin {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ingredient", Namespace="http://schemas.datacontract.org/2004/07/CakePromo.BusinessLogic")]
    [System.SerializableAttribute()]
    public partial class Ingredient : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Cake> CakeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IngredientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CakePromotion.CakePromoServiceWin.Unit UnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CakePromotion.CakePromoServiceWin.User UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Cake> Cake {
            get {
                return this.CakeField;
            }
            set {
                if ((object.ReferenceEquals(this.CakeField, value) != true)) {
                    this.CakeField = value;
                    this.RaisePropertyChanged("Cake");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IngredientID {
            get {
                return this.IngredientIDField;
            }
            set {
                if ((this.IngredientIDField.Equals(value) != true)) {
                    this.IngredientIDField = value;
                    this.RaisePropertyChanged("IngredientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CakePromotion.CakePromoServiceWin.Unit Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CakePromotion.CakePromoServiceWin.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Unit", Namespace="http://schemas.datacontract.org/2004/07/CakePromo.BusinessLogic")]
    [System.SerializableAttribute()]
    public partial class Unit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnitIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CakePromotion.CakePromoServiceWin.User UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnitID {
            get {
                return this.UnitIDField;
            }
            set {
                if ((this.UnitIDField.Equals(value) != true)) {
                    this.UnitIDField = value;
                    this.RaisePropertyChanged("UnitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CakePromotion.CakePromoServiceWin.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/CakePromo.BusinessLogic")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Contact> ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CakePromotion.CakePromoServiceWin.Personal PersonalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Contact> Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CakePromotion.CakePromoServiceWin.Personal Personal {
            get {
                return this.PersonalField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonalField, value) != true)) {
                    this.PersonalField = value;
                    this.RaisePropertyChanged("Personal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cake", Namespace="http://schemas.datacontract.org/2004/07/CakePromo.BusinessLogic")]
    [System.SerializableAttribute()]
    public partial class Cake : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CakeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.CakePhoto> CakePhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Ingredient> IngredientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Rate> RateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecipieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CakePromotion.CakePromoServiceWin.User UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CakeID {
            get {
                return this.CakeIDField;
            }
            set {
                if ((this.CakeIDField.Equals(value) != true)) {
                    this.CakeIDField = value;
                    this.RaisePropertyChanged("CakeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.CakePhoto> CakePhoto {
            get {
                return this.CakePhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.CakePhotoField, value) != true)) {
                    this.CakePhotoField = value;
                    this.RaisePropertyChanged("CakePhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Ingredient> Ingredient {
            get {
                return this.IngredientField;
            }
            set {
                if ((object.ReferenceEquals(this.IngredientField, value) != true)) {
                    this.IngredientField = value;
                    this.RaisePropertyChanged("Ingredient");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Rate> Rate {
            get {
                return this.RateField;
            }
            set {
                if ((object.ReferenceEquals(this.RateField, value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Recipie {
            get {
                return this.RecipieField;
            }
            set {
                if ((object.ReferenceEquals(this.RecipieField, value) != true)) {
                    this.RecipieField = value;
                    this.RaisePropertyChanged("Recipie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CakePromotion.CakePromoServiceWin.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CakePhoto", Namespace="http://schemas.datacontract.org/2004/07/CakePromo.BusinessLogic")]
    [System.SerializableAttribute()]
    public partial class CakePhoto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CakePhotoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoURL_LargeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoURL_SmallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CakePromotion.CakePromoServiceWin.User UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CakePhotoID {
            get {
                return this.CakePhotoIDField;
            }
            set {
                if ((this.CakePhotoIDField.Equals(value) != true)) {
                    this.CakePhotoIDField = value;
                    this.RaisePropertyChanged("CakePhotoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoURL_Large {
            get {
                return this.PhotoURL_LargeField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoURL_LargeField, value) != true)) {
                    this.PhotoURL_LargeField = value;
                    this.RaisePropertyChanged("PhotoURL_Large");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoURL_Small {
            get {
                return this.PhotoURL_SmallField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoURL_SmallField, value) != true)) {
                    this.PhotoURL_SmallField = value;
                    this.RaisePropertyChanged("PhotoURL_Small");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CakePromotion.CakePromoServiceWin.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rate", Namespace="http://schemas.datacontract.org/2004/07/CakePromo.BusinessLogic")]
    [System.SerializableAttribute()]
    public partial class Rate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DesignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FacilitateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RateIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TasteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CakePromotion.CakePromoServiceWin.User UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Design {
            get {
                return this.DesignField;
            }
            set {
                if ((this.DesignField.Equals(value) != true)) {
                    this.DesignField = value;
                    this.RaisePropertyChanged("Design");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Facilitate {
            get {
                return this.FacilitateField;
            }
            set {
                if ((this.FacilitateField.Equals(value) != true)) {
                    this.FacilitateField = value;
                    this.RaisePropertyChanged("Facilitate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RateID {
            get {
                return this.RateIDField;
            }
            set {
                if ((this.RateIDField.Equals(value) != true)) {
                    this.RateIDField = value;
                    this.RaisePropertyChanged("RateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Taste {
            get {
                return this.TasteField;
            }
            set {
                if ((this.TasteField.Equals(value) != true)) {
                    this.TasteField = value;
                    this.RaisePropertyChanged("Taste");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CakePromotion.CakePromoServiceWin.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Personal", Namespace="http://schemas.datacontract.org/2004/07/CakePromo.BusinessLogic")]
    [System.SerializableAttribute()]
    public partial class Personal : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BirthdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeStampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Birthdate {
            get {
                return this.BirthdateField;
            }
            set {
                if ((this.BirthdateField.Equals(value) != true)) {
                    this.BirthdateField = value;
                    this.RaisePropertyChanged("Birthdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Name {
            get {
                return this.NameField;
            }
            set {
                if ((this.NameField.Equals(value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonalID {
            get {
                return this.PersonalIDField;
            }
            set {
                if ((this.PersonalIDField.Equals(value) != true)) {
                    this.PersonalIDField = value;
                    this.RaisePropertyChanged("PersonalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((this.SurnameField.Equals(value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contact", Namespace="http://schemas.datacontract.org/2004/07/CakePromo.BusinessLogic")]
    [System.SerializableAttribute()]
    public partial class Contact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeStampField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Address {
            get {
                return this.AddressField;
            }
            set {
                if ((this.AddressField.Equals(value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactID {
            get {
                return this.ContactIDField;
            }
            set {
                if ((this.ContactIDField.Equals(value) != true)) {
                    this.ContactIDField = value;
                    this.RaisePropertyChanged("ContactID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Email {
            get {
                return this.EmailField;
            }
            set {
                if ((this.EmailField.Equals(value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CakePromoServiceWin.IMain")]
    public interface IMain {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetAllCakesEager", ReplyAction="http://tempuri.org/IMain/GetAllCakesEagerResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CakePromotion.CakePromoServiceWin.Ingredient))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Cake>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CakePromotion.CakePromoServiceWin.Cake))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.CakePhoto>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CakePromotion.CakePromoServiceWin.CakePhoto))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CakePromotion.CakePromoServiceWin.User))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Contact>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CakePromotion.CakePromoServiceWin.Contact))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CakePromotion.CakePromoServiceWin.Personal))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Ingredient>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Rate>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CakePromotion.CakePromoServiceWin.Rate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CakePromotion.CakePromoServiceWin.Unit))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<System.Collections.Generic.List<object>>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.List<object>))]
        System.Collections.Generic.List<System.Collections.Generic.List<object>> GetAllCakesEager();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/GetAllCakesEager", ReplyAction="http://tempuri.org/IMain/GetAllCakesEagerResponse")]
        System.IAsyncResult BeginGetAllCakesEager(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<System.Collections.Generic.List<object>> EndGetAllCakesEager(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetCakeByID", ReplyAction="http://tempuri.org/IMain/GetCakeByIDResponse")]
        CakePromotion.CakePromoServiceWin.Cake GetCakeByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/GetCakeByID", ReplyAction="http://tempuri.org/IMain/GetCakeByIDResponse")]
        System.IAsyncResult BeginGetCakeByID(int id, System.AsyncCallback callback, object asyncState);
        
        CakePromotion.CakePromoServiceWin.Cake EndGetCakeByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetIngredientsByCakeID", ReplyAction="http://tempuri.org/IMain/GetIngredientsByCakeIDResponse")]
        System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Ingredient> GetIngredientsByCakeID(int CakeID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/GetIngredientsByCakeID", ReplyAction="http://tempuri.org/IMain/GetIngredientsByCakeIDResponse")]
        System.IAsyncResult BeginGetIngredientsByCakeID(int CakeID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Ingredient> EndGetIngredientsByCakeID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMain/GetAllCakes", ReplyAction="http://tempuri.org/IMain/GetAllCakesResponse")]
        System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Cake> GetAllCakes();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMain/GetAllCakes", ReplyAction="http://tempuri.org/IMain/GetAllCakesResponse")]
        System.IAsyncResult BeginGetAllCakes(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Cake> EndGetAllCakes(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMainChannel : CakePromotion.CakePromoServiceWin.IMain, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllCakesEagerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllCakesEagerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<System.Collections.Generic.List<object>> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<System.Collections.Generic.List<object>>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCakeByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCakeByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public CakePromotion.CakePromoServiceWin.Cake Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((CakePromotion.CakePromoServiceWin.Cake)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetIngredientsByCakeIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetIngredientsByCakeIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Ingredient> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Ingredient>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllCakesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllCakesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Cake> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Cake>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainClient : System.ServiceModel.ClientBase<CakePromotion.CakePromoServiceWin.IMain>, CakePromotion.CakePromoServiceWin.IMain {
        
        private BeginOperationDelegate onBeginGetAllCakesEagerDelegate;
        
        private EndOperationDelegate onEndGetAllCakesEagerDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllCakesEagerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCakeByIDDelegate;
        
        private EndOperationDelegate onEndGetCakeByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetCakeByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetIngredientsByCakeIDDelegate;
        
        private EndOperationDelegate onEndGetIngredientsByCakeIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetIngredientsByCakeIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllCakesDelegate;
        
        private EndOperationDelegate onEndGetAllCakesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllCakesCompletedDelegate;
        
        public MainClient() {
        }
        
        public MainClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MainClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MainClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetAllCakesEagerCompletedEventArgs> GetAllCakesEagerCompleted;
        
        public event System.EventHandler<GetCakeByIDCompletedEventArgs> GetCakeByIDCompleted;
        
        public event System.EventHandler<GetIngredientsByCakeIDCompletedEventArgs> GetIngredientsByCakeIDCompleted;
        
        public event System.EventHandler<GetAllCakesCompletedEventArgs> GetAllCakesCompleted;
        
        public System.Collections.Generic.List<System.Collections.Generic.List<object>> GetAllCakesEager() {
            return base.Channel.GetAllCakesEager();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllCakesEager(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllCakesEager(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<System.Collections.Generic.List<object>> EndGetAllCakesEager(System.IAsyncResult result) {
            return base.Channel.EndGetAllCakesEager(result);
        }
        
        private System.IAsyncResult OnBeginGetAllCakesEager(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllCakesEager(callback, asyncState);
        }
        
        private object[] OnEndGetAllCakesEager(System.IAsyncResult result) {
            System.Collections.Generic.List<System.Collections.Generic.List<object>> retVal = this.EndGetAllCakesEager(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllCakesEagerCompleted(object state) {
            if ((this.GetAllCakesEagerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllCakesEagerCompleted(this, new GetAllCakesEagerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllCakesEagerAsync() {
            this.GetAllCakesEagerAsync(null);
        }
        
        public void GetAllCakesEagerAsync(object userState) {
            if ((this.onBeginGetAllCakesEagerDelegate == null)) {
                this.onBeginGetAllCakesEagerDelegate = new BeginOperationDelegate(this.OnBeginGetAllCakesEager);
            }
            if ((this.onEndGetAllCakesEagerDelegate == null)) {
                this.onEndGetAllCakesEagerDelegate = new EndOperationDelegate(this.OnEndGetAllCakesEager);
            }
            if ((this.onGetAllCakesEagerCompletedDelegate == null)) {
                this.onGetAllCakesEagerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCakesEagerCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllCakesEagerDelegate, null, this.onEndGetAllCakesEagerDelegate, this.onGetAllCakesEagerCompletedDelegate, userState);
        }
        
        public CakePromotion.CakePromoServiceWin.Cake GetCakeByID(int id) {
            return base.Channel.GetCakeByID(id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCakeByID(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCakeByID(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public CakePromotion.CakePromoServiceWin.Cake EndGetCakeByID(System.IAsyncResult result) {
            return base.Channel.EndGetCakeByID(result);
        }
        
        private System.IAsyncResult OnBeginGetCakeByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return this.BeginGetCakeByID(id, callback, asyncState);
        }
        
        private object[] OnEndGetCakeByID(System.IAsyncResult result) {
            CakePromotion.CakePromoServiceWin.Cake retVal = this.EndGetCakeByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCakeByIDCompleted(object state) {
            if ((this.GetCakeByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCakeByIDCompleted(this, new GetCakeByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCakeByIDAsync(int id) {
            this.GetCakeByIDAsync(id, null);
        }
        
        public void GetCakeByIDAsync(int id, object userState) {
            if ((this.onBeginGetCakeByIDDelegate == null)) {
                this.onBeginGetCakeByIDDelegate = new BeginOperationDelegate(this.OnBeginGetCakeByID);
            }
            if ((this.onEndGetCakeByIDDelegate == null)) {
                this.onEndGetCakeByIDDelegate = new EndOperationDelegate(this.OnEndGetCakeByID);
            }
            if ((this.onGetCakeByIDCompletedDelegate == null)) {
                this.onGetCakeByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCakeByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetCakeByIDDelegate, new object[] {
                        id}, this.onEndGetCakeByIDDelegate, this.onGetCakeByIDCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Ingredient> GetIngredientsByCakeID(int CakeID) {
            return base.Channel.GetIngredientsByCakeID(CakeID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetIngredientsByCakeID(int CakeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetIngredientsByCakeID(CakeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Ingredient> EndGetIngredientsByCakeID(System.IAsyncResult result) {
            return base.Channel.EndGetIngredientsByCakeID(result);
        }
        
        private System.IAsyncResult OnBeginGetIngredientsByCakeID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int CakeID = ((int)(inValues[0]));
            return this.BeginGetIngredientsByCakeID(CakeID, callback, asyncState);
        }
        
        private object[] OnEndGetIngredientsByCakeID(System.IAsyncResult result) {
            System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Ingredient> retVal = this.EndGetIngredientsByCakeID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetIngredientsByCakeIDCompleted(object state) {
            if ((this.GetIngredientsByCakeIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetIngredientsByCakeIDCompleted(this, new GetIngredientsByCakeIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetIngredientsByCakeIDAsync(int CakeID) {
            this.GetIngredientsByCakeIDAsync(CakeID, null);
        }
        
        public void GetIngredientsByCakeIDAsync(int CakeID, object userState) {
            if ((this.onBeginGetIngredientsByCakeIDDelegate == null)) {
                this.onBeginGetIngredientsByCakeIDDelegate = new BeginOperationDelegate(this.OnBeginGetIngredientsByCakeID);
            }
            if ((this.onEndGetIngredientsByCakeIDDelegate == null)) {
                this.onEndGetIngredientsByCakeIDDelegate = new EndOperationDelegate(this.OnEndGetIngredientsByCakeID);
            }
            if ((this.onGetIngredientsByCakeIDCompletedDelegate == null)) {
                this.onGetIngredientsByCakeIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetIngredientsByCakeIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetIngredientsByCakeIDDelegate, new object[] {
                        CakeID}, this.onEndGetIngredientsByCakeIDDelegate, this.onGetIngredientsByCakeIDCompletedDelegate, userState);
        }
        
        public System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Cake> GetAllCakes() {
            return base.Channel.GetAllCakes();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAllCakes(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllCakes(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Cake> EndGetAllCakes(System.IAsyncResult result) {
            return base.Channel.EndGetAllCakes(result);
        }
        
        private System.IAsyncResult OnBeginGetAllCakes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetAllCakes(callback, asyncState);
        }
        
        private object[] OnEndGetAllCakes(System.IAsyncResult result) {
            System.Collections.Generic.List<CakePromotion.CakePromoServiceWin.Cake> retVal = this.EndGetAllCakes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllCakesCompleted(object state) {
            if ((this.GetAllCakesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllCakesCompleted(this, new GetAllCakesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllCakesAsync() {
            this.GetAllCakesAsync(null);
        }
        
        public void GetAllCakesAsync(object userState) {
            if ((this.onBeginGetAllCakesDelegate == null)) {
                this.onBeginGetAllCakesDelegate = new BeginOperationDelegate(this.OnBeginGetAllCakes);
            }
            if ((this.onEndGetAllCakesDelegate == null)) {
                this.onEndGetAllCakesDelegate = new EndOperationDelegate(this.OnEndGetAllCakes);
            }
            if ((this.onGetAllCakesCompletedDelegate == null)) {
                this.onGetAllCakesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCakesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllCakesDelegate, null, this.onEndGetAllCakesDelegate, this.onGetAllCakesCompletedDelegate, userState);
        }
    }
}
