@model List<CakePromotion.CakePromoService.Cake>
@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
@foreach (var cake in Model.Select((x,i) => new { Data = x, Index = i }))
{
    <a href="@Url.Action("CakeCart", "Gallery", new {CakeID = cake.Data.CakeID})">
        <div id="cakeListItem" class="@(cake.Index % 2==0 ? "left":"right")">
            <div id="cakeListItem_img"><img src="@Url.Content(cake.Data.CakePhoto.FirstOrDefault().PhotoURL_Small)" alt="@cake.Data.Name" width="120" /></div>
            <div id="cakeListItem_content">
                <div id="cakeListName">
                    @cake.Data.Name
                </div>
                <p></p>
                @if (cake.Data.Rate.Count > 0)
                {
                    <div id="cakeListRate">
                        <div>Overall rate:</div>
                        @{double rateAvg = (Math.Round((cake.Data.Rate.Average(r => r.Facilitate) + cake.Data.Rate.Average(r => r.Design) + cake.Data.Rate.Average(r => r.Taste)) / 3, 1));}
                        @for(int i=1;i<6;i++)
                        {
                            double number = Math.Floor(rateAvg);
                            double fraction = rateAvg - number;
                            <div class="star" style="background-position:0 @(number>=i ? "16px" : (number+1 < i) ? "0" : (Math.Floor(fraction/2 * 10) * -16).ToString() + "px");"></div>
                        }
                            @rateAvg
                    </div>  
                    <div id="cakeListComment">
                        <p>Comments: @cake.Data.Rate.FirstOrDefault().Comments</p>
</div>                    
                }
            </div>
        </div>
    </a>

}
<div style="clear: both"></div>
